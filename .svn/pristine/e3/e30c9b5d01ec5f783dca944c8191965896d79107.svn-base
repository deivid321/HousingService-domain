package com.deivydas.voroneckis.domain;

import com.deivydas.voroneckis.rest.Geocode;
import com.deivydas.voroneckis.rest.Location;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import java.util.Objects;
import java.util.Random;
import java.util.UUID;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.OneToMany;
import javax.validation.Valid;
import javax.validation.constraints.Max;
import javax.validation.constraints.Min;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;
import org.springframework.web.client.RestTemplate;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author vdeiv
 */
@javax.persistence.Entity
public class Room extends Entity {

    @OneToMany(mappedBy = "room")
    @Valid
    private List<Student> studentList = new ArrayList<Student>();

    @NotNull
    @Size(min = 1, max = 20, message = "{error.street.size}")
    private String street;
    @Min(1)
    private int houseNumber;
    @Min(1)
    private int roomNumber;
    @NotNull
    private boolean free = true;
    @Min(2)
    @Max(3)
    private int maxStudents = 3;

    private float lng, lat;

    private String fullName;

    @Enumerated(EnumType.STRING)
    private Neighborhood neighborhood;

    public List<Student> getStudentList() {
        return studentList;
    }

    public void setStudentList(List<Student> studentList) {
        this.studentList = studentList;
    }
    private int area;

    public int getArea() {
        return area;
    }

    public void setArea(int area) {
        this.area = area;
    }

    public int getHouseNumber() {
        return houseNumber;
    }

    public void setHouseNumber(int houseNumber) {
        this.houseNumber = houseNumber;
    }

    public int getRoomNumber() {
        return roomNumber;
    }

    public void setRoomNumber(int roomNumber) {
        this.roomNumber = roomNumber;
    }

    public boolean isFree() {
        return free;
    }

    public boolean getFree() {
        return free;
    }

    public void setFree(boolean free) {
        this.free = free;
    }

    public int getMaxStudents() {
        return maxStudents;
    }

    public void setMaxStudents(int maxStudents) {
        this.maxStudents = maxStudents;
    }

    public Neighborhood getNeighborhood() {
        return neighborhood;
    }

    public void setNeighborhood(Neighborhood neighborhood) {
        this.neighborhood = neighborhood;
    }

    public void setStreet(String street) {
        this.street = street;
    }

    public String getStreet() {
        return street;
    }

    public float getLng() {
        return lng;
    }

    public void setLng(float lng) {
        this.lng = lng;
    }

    public float getLat() {
        return lat;
    }

    public void setLat(float lat) {
        this.lat = lat;
    }

    public void setCoordinates(Location location) {
        lat = Float.parseFloat(location.getLat());
        lng = Float.parseFloat(location.getLng());
    }

    public void setOccupationOfRoom(boolean free) {
        this.free = free;
    }

    public void setNumberOfMaxStudents(int maxStudents) throws NegativeOrNullNumberException {
        if (maxStudents <= 1) {
            throw new NegativeOrNullNumberException();
        }
        this.maxStudents = maxStudents;
    }

    public void settleNewStudent(Student newStudent) {
        if (studentList.size() < maxStudents) {
            studentList.add(newStudent);
            newStudent.setRoom(this);
            free = false;
        }
    }

    public void unsettleStudent(Student outStudent) {
        Iterator<Student> students = studentList.iterator();
        while (students.hasNext()) {
            Student student = students.next();
            if (student.equals(outStudent)) { //TODO implement equals in student
                student.setRoom(null);
                students.remove();
                break;
            }
        }
        if (studentList.isEmpty()) {
            free = true;
        }
    }

    public int getFreeSpace() {
        return maxStudents - studentList.size();
    }

    @NotNull
    public String getFullName() {
        return street + ", " + houseNumber + ", " + roomNumber;
    }

}
